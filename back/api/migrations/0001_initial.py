# Generated by Django 4.2.13 on 2025-06-03 10:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Genre",
            fields=[
                ("genre_id", models.IntegerField(primary_key=True, serialize=False)),
                ("genre_name", models.CharField(max_length=50, unique=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "db_table": "Genre",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Illustration",
            fields=[
                (
                    "illustration_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("image_url", models.CharField(blank=True, max_length=255, null=True)),
                ("caption_text", models.TextField(blank=True, null=True)),
                ("labels", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField()),
            ],
            options={
                "db_table": "Illustration",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Paragraphqa",
            fields=[
                ("qa_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("question_text", models.TextField()),
                ("answer_text", models.TextField()),
                ("created_at", models.DateTimeField()),
            ],
            options={
                "db_table": "ParagraphQA",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Paragraphversion",
            fields=[
                ("version_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("version_no", models.IntegerField()),
                ("content_text", models.TextField(blank=True, null=True)),
                ("generated_by", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
            ],
            options={
                "db_table": "ParagraphVersion",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Story",
            fields=[
                ("story_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                ("summary", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("status", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "author_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "db_table": "Story",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Storyparagraph",
            fields=[
                (
                    "paragraph_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("paragraph_no", models.IntegerField()),
                ("content_text", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "StoryParagraph",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("login_id", models.CharField(blank=True, max_length=50, null=True)),
                ("password_hash", models.CharField(max_length=255)),
                ("nickname", models.CharField(max_length=50, unique=True)),
                ("email", models.CharField(blank=True, max_length=100, null=True)),
                ("age", models.IntegerField(blank=True, null=True)),
                ("interests", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField()),
                ("last_login", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "profile_image_url",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "provider",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                (
                    "provider_id",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("is_active", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "User",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Follow",
            fields=[
                (
                    "follower_user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="api.user",
                    ),
                ),
                ("followed_at", models.DateTimeField()),
            ],
            options={
                "db_table": "Follow",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Storygenre",
            fields=[
                (
                    "story",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="api.story",
                    ),
                ),
            ],
            options={
                "db_table": "StoryGenre",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Usergenre",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="api.user",
                    ),
                ),
            ],
            options={
                "db_table": "UserGenre",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Userlike",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="api.user",
                    ),
                ),
                ("liked_at", models.DateTimeField()),
            ],
            options={
                "db_table": "UserLike",
                "managed": False,
            },
        ),
    ]
